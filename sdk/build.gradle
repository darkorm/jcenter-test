apply plugin: 'com.android.library'

if (project.hasProperty("mavenMajorVersion")) {
    apply plugin: 'maven'
}

def getVersionName() {
    if (project.hasProperty("mavenMajorVersion")) {
        return "${mavenMajorVersion}.${mavenMinorVersion}.${mavenPatchVersion}"
    } else {
        return "";
    }
}

version = getVersionName()

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.1.0'
    testCompile 'junit:junit:4.12'
}

uploadArchives {
    if (project.hasProperty("mavenMajorVersion")) {
        //from <cdp root>
        //gradlew sdk:uploadArchives -Puser=rkor -Pkey= --info
        def bintrayUsername = 'setUserOnCommandLine'
        def bintrayApikey = 'setKeyOnCommandLine'

        configuration = configurations.archives
        repositories.mavenDeployer {
            pom {
                setGroupId project.mavenGroupId
                setArtifactId project.mavenSDKArtifactId
                setVersion getVersionName()
            }
            repository(url: project.mavenRepoUrl) {
                authentication(
                        userName: project.hasProperty("user") ? project.property("user") : bintrayUsername,
                        password: project.hasProperty("key") ? project.property("key") : bintrayApikey
                )
            }
        }
    }
}
